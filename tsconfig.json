{
  "compilerOptions": {
    "baseUrl": ".",
    "outDir": "./dist/",
    /*
      Подсвечивает все места где не указан тип,
      Однако это не означает, что теперь вовсе нельзя использовать any,
      а что в подобных ситуациях разработчик должен явно писать any
    **/
    "noImplicitAny": true,
    "module": "es6",
    // В какую спецификацию компилируем: для поддержки большинства браузеров
    "target": "es5",
    "jsx": "react-jsx",
    // Компилятор будет обрабатывать не только TS файлы, но и JS файлы
    "allowJs": true,
    "moduleResolution": "node",
    /*
      Позволяет работать с пакетами, которые используют common js, через import require()
      import path from 'path';
    **/
    "esModuleInterop": true,
    /*
      Если какая-либо библиотека не имеет default import,
      лоадеры вроде ts-loader или babel-loader автоматически создают их
      вместо такого импорта
      import * as React from 'react';
      можно писать такой
      import React from 'react';
    **/
    "allowSyntheticDefaultImports": true
  },
  "ts-node": {
    "compilerOptions": {
      "module": "CommonJS"
    }
  }
}